<script>
  
  let mesValorTotal = [0,0,0,0,0,0,0,0,0,0,0,0]              
  let mesTrimestre =[];
  let mesValorTrimestre = [0,0,0];
  let trimestreTitulo  
              {{#each saldoTotal}} 
                if({{TRIMESTRE}}=={{TRIMESTREATUAL}})
                {
                  mesValorTrimestre[{{ORDEMTRIMESTRE}}] = {{VALOR}}// posicionando o valordo trimestre
                  switch({{TRIMESTRE}}){// organizando o trimestre
                    case 1:
                      mesTrimestre = ['Janeiro', 'Fevereiro', 'Março'],['Primeiro'];
                      trimestreTitulo = 'Primeiro Trimestre';
                    break;
                    case 2:
                      mesTrimestre = ['Abril', 'Maio', 'Junho',],['Segundo'];
                      trimestreTitulo = 'Segundo Trimestre';
                    break;
                    case 3:
                      mesTrimestre = ['Julho', 'Agosto', 'Setembro'],['Terceiro'];
                      trimestreTitulo = 'Terceiro Trimestre';
                    break;
                    case 4:
                      mesTrimestre = [ 'Outubro', 'Novembro', 'Dezembro'],['Quarto'];
                      trimestreTitulo = 'Quarto Trimestre';
                    break;
                  }                 
                }             
                mesValorTotal[{{MES}}-1] = {{VALOR}} // Posicionando os valores saldoTotal   
                         
               {{/each}}               
</script>

<div class="panel-header panel-header-lg"> <!-- Card do topo -->
        <canvas id="bigDashboardChart">   <!-- Resolvi colocar manualmente -->
          <script>
          chartColor = "#FFFFFF";

    // General configuration for the charts with Line gradientStroke
    
    var ctx = document.getElementById('bigDashboardChart').getContext("2d");

    var gradientStroke = ctx.createLinearGradient(500, 0, 100, 0);
    gradientStroke.addColorStop(0, '#80b6f4');
    gradientStroke.addColorStop(1, chartColor);

    var gradientFill = ctx.createLinearGradient(0, 200, 0, 50);
    gradientFill.addColorStop(0, "rgba(128, 182, 244, 0)");
    gradientFill.addColorStop(1, "rgba(255, 255, 255, 0.24)");

    var myChart = new Chart(ctx, {
      type: 'line',
      data: {
        labels: ["JAN", "FEV", "MAR", "APR", "MAI", "JUN", "JUL", "AUG", "SET", "OUT", "NOV", "DEZ"],
        datasets: [{
          label: "Balanço mês-a-mês",
          borderColor: chartColor,
          pointBorderColor: chartColor,
          pointBackgroundColor: "#1e3d60",
          pointHoverBackgroundColor: "#1e3d60",
          pointHoverBorderColor: chartColor,
          pointBorderWidth: 1,
          pointHoverRadius: 7,
          pointHoverBorderWidth: 2,
          pointRadius: 5,
          fill: true,
          backgroundColor: gradientFill,
          borderWidth: 2,
          data: mesValorTotal
        }]
      },
      options: {
        layout: {
          padding: {
            left: 20,
            right: 20,
            top: 0,
            bottom: 0
          }
        },
        maintainAspectRatio: false,
        tooltips: {
          backgroundColor: '#fff',
          titleFontColor: '#333',
          bodyFontColor: '#666',
          bodySpacing: 4,
          xPadding: 12,
          mode: "nearest",
          intersect: 0,
          position: "nearest"
        },
        legend: {
          position: "bottom",
          fillStyle: "#FFF",
          display: false
        },
        scales: {
          yAxes: [{
            ticks: {
              fontColor: "rgba(255,255,255,0.4)",
              fontStyle: "bold",
              beginAtZero: true,
              maxTicksLimit: 5,
              padding: 10
            },
            gridLines: {
              drawTicks: true,
              drawBorder: false,
              display: true,
              color: "rgba(255,255,255,0.1)",
              zeroLineColor: "transparent"
            }

          }],
          xAxes: [{
            gridLines: {
              zeroLineColor: "transparent",
              display: false,

            },
            ticks: {
              padding: 10,
              fontColor: "rgba(255,255,255,0.4)",
              fontStyle: "bold"
            }
          }]
        }
      }
    });
        </script>          
        </canvas>        
      </div>

      <!-- Grafico 1 -->

        <div class="content">
        <div class="row">
          <div class="col-lg-8">
            <div class="card card-chart">
              <div class="card-header">
                <h5 class="card-category">Global Sales</h5>
                <h4 class="card-title"></h4>
                <div class="dropdown">
                  <button type="button" class="btn btn-round btn-outline-default dropdown-toggle btn-simple btn-icon no-caret" data-toggle="dropdown">
                    <i class="now-ui-icons loader_gear"></i>
                  </button>
                  <!-- Configurações do Card/Gráfico -->
                  <div class="dropdown-menu dropdown-menu-right">
                    <a class="dropdown-item" href="#">Action</a>
                    <a class="dropdown-item" href="#">Another action</a>
                    <a class="dropdown-item" href="#">Something else here</a>
                    <a class="dropdown-item text-danger" href="#">Remove Data</a>
                  </div>
                </div>
              </div>
              <div class="card-body ">
                <div class="chart-area"> <!-- Gráfico* (Olhar arquivo demo.js, e montar um equivalente) -->
                  <canvas id="lineChartExample"> <!-- Resolvi colocar manualmente -->
                    <script>
                       // Posicionando os valores Inadimplentes
               let mesInadimplente = [0,0,0,0,0,0,0,0,0,0,0,0]
              {{#each inadimplente}}              
                mesInadimplente[{{MES}}-1] = {{VALOR}} 
                           
               {{/each}}
                      var ctx = document.getElementById("lineChartExample").getContext("2d");

    gradientFill = ctx.createLinearGradient(0, 170, 0, 50);
    gradientFill.addColorStop(1, 'rgb(0,255,128)');
    gradientFill.addColorStop(0, "rgba(24, 206, 15, 0)");
    let gradientFillInadimplente = ctx.createLinearGradient(0, 170, 0, 50);
    gradientFillInadimplente.addColorStop(1, 'rgb(255,72,72)');
    gradientFillInadimplente.addColorStop(0, "rgba(24, 206, 15, 0)");
    var viewsChart = new Chart(ctx, {
      type: "bar",
      data: {
        labels: ["JAN", "FEV", "MAR", "APR", "MAI", "JUN", "JUL", "AUG", "SET", "OUT", "NOV", "DEZ"],
        datasets: [{
          label: 'Em dia',
          backgroundColor: gradientFill,
          borderColor: 'rgb(0, 170, 85)',
          pointBorderColor: "#FFF",
          pointBackgroundColor: 'rgb(0, 170, 85)',
          pointBorderWidth: 2,
          pointHoverRadius: 4,
          pointHoverBorderWidth: 1,
          pointRadius: 4,
          fill: true,
          borderWidth: 1,
          data: mesValorTotal
        },
        {
          label: 'Inadimplente',
          backgroundColor: gradientFillInadimplente,
          borderColor: 'rgb(253, 0, 0)',
          pointBorderColor: "#FFF",
          pointBackgroundColor: 'rgb(253, 0, 0)',
          pointBorderWidth: 2,
          pointHoverRadius: 4,
          pointHoverBorderWidth: 1,
          pointRadius: 4,
          fill: true,
          borderWidth: 1,
          data: mesInadimplente
        }]
      },
      options: {
        maintainAspectRatio: false,
        legend: {
          display: true
        },
        tooltips: {
          bodySpacing: 4,
          mode: "nearest",
          intersect: 0,
          position: "nearest",
          xPadding: 10,
          yPadding: 10,
          caretPadding: 10
        },
        responsive: 1,
        scales: {
          yAxes: [{
            gridLines: 0,
            gridLines: {
              zeroLineColor: "transparent",
              drawBorder: false
            }
          }],
          xAxes: [{
            display: 1,
            gridLines: 0,
            ticks: {
              display: true
            },
            gridLines: {
              zeroLineColor: "transparent",
              drawTicks: false,
              display: false,
              drawBorder: false
            }
          }]
        }
        
      }
    });
                    </script>
                  </canvas>
                </div>
              </div>
              <div class="card-footer">
                <div class="stats">
                  <i class="now-ui-icons arrows-1_refresh-69"></i> Just Updated
                </div>
              </div>
            </div>
          </div>

      <!-- Fim Grafico 1 -->

      <!-- Grafico 2 -->

        <div class="col-lg-4 col-md-6">
            <div class="card card-chart">
              <div class="card-header">
                <h5 class="card-category">Gráfico Trimestral</h5>
                <h4 class="card-title" id="graficoTitulo"><script>              
                            this.document.getElementById('graficoTitulo').innerText = trimestreTitulo;
                          </script></h4>
                <div class="dropdown">
                  <button type="button" class="btn btn-round btn-outline-default dropdown-toggle btn-simple btn-icon no-caret" data-toggle="dropdown">
                    <i class="now-ui-icons loader_gear"></i>
                  </button>
                  <div class="dropdown-menu dropdown-menu-right">
                    <a class="dropdown-item" href="#">Action</a>
                    <a class="dropdown-item" href="#">Another action</a>
                    <a class="dropdown-item" href="#">Something else here</a>
                    <a class="dropdown-item text-danger" href="#">Remove Data</a>
                  </div>
                </div>
              </div>
              <div class="card-body">
                <div class="chart-area"> <!-- Gráfico* (Olhar arquivo demo.js, e montar um equivalente) -->
                  <canvas id="grafico_trimestre">
                    <script>
                     var ctx = document.getElementById("grafico_trimestre").getContext("2d");

                      gradientFill = ctx.createLinearGradient(0, 170, 0, 50);
                      gradientFill.addColorStop(1, 'rgb(255, 99, 132)');
                      gradientFill.addColorStop(0, "rgba(24, 206, 15, 0)");    
                      var viewsChart = new Chart(ctx, {
                        type: "bar",
                        data: {
                          labels: mesTrimestre,
                          datasets: [{
                            label: trimestreTitulo,
                            backgroundColor: gradientFill,
                            borderColor: 'rgb(255, 36, 80)',
                            pointBorderColor: "#FFF",
                            pointBackgroundColor: 'rgb(255, 36, 80)',
                            pointBorderWidth: 2,
                            pointHoverRadius: 4,
                            pointHoverBorderWidth: 1,
                            pointRadius: 4,
                            fill: true,
                            borderWidth: 1,
                            data: mesValorTrimestre
                          }]
                        },
                        options: {
                          maintainAspectRatio: false,
                          legend: {
                            display: false
                          },
                          tooltips: {
                            bodySpacing: 4,
                            mode: "nearest",
                            intersect: 0,
                            position: "nearest",
                            xPadding: 10,
                            yPadding: 10,
                            caretPadding: 10
                          },
                          responsive: 1,
                          scales: {
                            yAxes: [{
                              gridLines: 0,
                              gridLines: {
                                zeroLineColor: "transparent",
                                drawBorder: false
                              }
                            }],
                            xAxes: [{
                              display: 1,
                              gridLines: 0,
                              ticks: {
                                display: true
                              },
                              gridLines: {
                                zeroLineColor: "transparent",
                                drawTicks: false,
                                display: false,
                                drawBorder: false
                              }
                            }]
                          }
                          
                        }
                      });
                    </script>
                  </canvas>
                </div>
              </div>
              <div class="card-footer">
                <div class="stats">
                  <i class="now-ui-icons arrows-1_refresh-69"></i> Just Updated
                </div>
              </div>
            </div>
          </div>

      <!-- Fim Grafico 2 -->

      <!-- Lista  -->

         <div class="col-md-8">
            <div class="card">
              <div class="card-header">
                <h5 class="card-category">Rank de Inadimplentes</h5>
                <h4 class="card-title"> Employees Stats</h4>
              </div>
              <div class="card-body">
                <div class="table-responsive">
                  <table class="table">
                    <thead class=" text-primary">
                      <th class="text-center">
                        Nome
                      </th>
                      <th class="text-center">
                        Tempo de atraso
                      </th>
                      <th class="text-center">Valor</th>
                      <th class="text-center">
                        Contato
                      </th>
                    </thead>
                    <tbody>
                       {{#each rank}}
                      <tr>
                        <td class="text-center">
                          {{NOME}} <!-- Nome-->
                        </td>
                        <td class="text-center">
                          <b class="text-danger">{{TEMPOATRASO}}</b> dias     <!-- Tempo de atraso-->
                        </td>
                        <td class="text-center">
                          <Span>R$ {{VALOR}}</Span>
                        </td>
                        <td>
                          <a href="mailto:{{EMAIL}}"><small>{{EMAIL}}</small></a>  <!-- Contato -->
                        </td>                                              
                      </tr>
                      {{else}}
                      <tr>
                        <h2>Não há moradores Inadimplentes</h2>
                      </tr>
                      {{/each}}
                      
                    </tbody>
                  </table>
                </div>
              </div>
            </div>

      <!-- fim Lista -->

      <!-- Grafico 3 -->

        <div class="col-lg-4 col-md-6">
            <div class="card card-chart">
              <div class="card-header">
                <h5 class="card-category">Email Statistics</h5>
                <h4 class="card-title">24 Hours Performance</h4>
              </div>
              <div class="card-body">
                <div class="chart-area"><!-- Gráfico* (Olhar arquivo demo.js, e montar um equivalente) -->
                  <canvas id="barChartSimpleGradientsNumbers"></canvas>
                </div>
              </div>
              <div class="card-footer">
                <div class="stats">
                  <i class="now-ui-icons ui-2_time-alarm"></i> Last 7 days
                </div>
              </div>
            </div>
          </div>
        </div>
      <!-- Fim Grafico 3 -->
      
      

      <!-- Tarefas -->

        <div class="row">
          <div class="col-md-6">
            <div class="card  card-tasks">
              <div class="card-header ">
                <h5 class="card-category">Backend development</h5>
                <h4 class="card-title">Tasks</h4>
              </div>
              <div class="card-body ">
                <div class="table-full-width table-responsive">
                  <table class="table">
                    <tbody>
                      <tr>
                        <td>
                          <div class="form-check">
                            <label class="form-check-label">
                              <input class="form-check-input" type="checkbox" checked>
                              <span class="form-check-sign"></span>
                            </label>
                          </div>
                        </td>
                        <td class="text-left">Sign contract for "What are conference organizers afraid of?"</td>
                        <td class="td-actions text-right">
                          <button type="button" rel="tooltip" title="" class="btn btn-info btn-round btn-icon btn-icon-mini btn-neutral" data-original-title="Edit Task">
                            <i class="now-ui-icons ui-2_settings-90"></i>
                          </button>
                          <button type="button" rel="tooltip" title="" class="btn btn-danger btn-round btn-icon btn-icon-mini btn-neutral" data-original-title="Remove">
                            <i class="now-ui-icons ui-1_simple-remove"></i>
                          </button>
                        </td>
                      </tr>
                      <tr>
                        <td>
                          <div class="form-check">
                            <label class="form-check-label">
                              <input class="form-check-input" type="checkbox">
                              <span class="form-check-sign"></span>
                            </label>
                          </div>
                        </td>
                        <td class="text-left">Lines From Great Russian Literature? Or E-mails From My Boss?</td>
                        <td class="td-actions text-right">
                          <button type="button" rel="tooltip" title="" class="btn btn-info btn-round btn-icon btn-icon-mini btn-neutral" data-original-title="Edit Task">
                            <i class="now-ui-icons ui-2_settings-90"></i>
                          </button>
                          <button type="button" rel="tooltip" title="" class="btn btn-danger btn-round btn-icon btn-icon-mini btn-neutral" data-original-title="Remove">
                            <i class="now-ui-icons ui-1_simple-remove"></i>
                          </button>
                        </td>
                      </tr>
                      <tr>
                        <td>
                          <div class="form-check">
                            <label class="form-check-label">
                              <input class="form-check-input" type="checkbox" checked>
                              <span class="form-check-sign"></span>
                            </label>
                          </div>
                        </td>
                        <td class="text-left">Flooded: One year later, assessing what was lost and what was found when a ravaging rain swept through metro Detroit
                        </td>
                        <td class="td-actions text-right">
                          <button type="button" rel="tooltip" title="" class="btn btn-info btn-round btn-icon btn-icon-mini btn-neutral" data-original-title="Edit Task">
                            <i class="now-ui-icons ui-2_settings-90"></i>
                          </button>
                          <button type="button" rel="tooltip" title="" class="btn btn-danger btn-round btn-icon btn-icon-mini btn-neutral" data-original-title="Remove">
                            <i class="now-ui-icons ui-1_simple-remove"></i>
                          </button>
                        </td>
                      </tr>
                    </tbody>
                  </table>
                </div>
              </div>
              <div class="card-footer ">
                <hr>
                <div class="stats">
                  <i class="now-ui-icons loader_refresh spin"></i> Updated 3 minutes ago
                </div>
              </div>
            </div>
          </div>

      <!-- Fim Tarefas -->
      
      
       </div>
      </div>
    </div>